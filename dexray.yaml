# Dexray Insight Configuration File
# This file contains configuration settings for API keys and analysis parameters

# Signature Detection API Configuration
# Replace "YOUR_API_KEY" with your actual API keys from the respective services

# Analysis Configuration
analysis:
  parallel_execution:
    enabled: true
    max_workers: 4
  timeout:
    module_timeout: 300  # 5 minutes per module
    tool_timeout: 600    # 10 minutes per tool

# Module Configuration
modules:
  signature_detection:
    enabled: true
    priority: 10
    providers:
      virustotal:
        enabled: false
        api_key: "YOUR_VIRUSTOTAL_API_KEY"
        rate_limit: 4  # requests per minute for free tier
        
      koodous:
        enabled: false
        api_key: "YOUR_KOODOUS_API_KEY"
        
      triage:
        enabled: false
        api_key: "YOUR_TRIAGE_API_KEY"
    
  permission_analysis:
    enabled: true
    priority: 20
    critical_permissions_file: null  # Path to custom permissions file
    use_default_critical_list: true
    
  string_analysis:
    enabled: true
    priority: 30
    patterns:
      ip_addresses: true
      urls: true
      email_addresses: true
      domains: true
      base64_strings: true
    filters:
      min_string_length: 2
      exclude_patterns: []  # No exclusion patterns by default
      
  api_invocation:
    enabled: false
    priority: 40
    reflection_analysis: true
    
  manifest_analysis:
    enabled: true
    priority: 15
    extract_intent_filters: true
    analyze_exported_components: true
    
  apk_diffing:
    enabled: false
    priority: 100
    
  tracker_analysis:
    enabled: true
    priority: 35
    fetch_exodus_trackers: true
    exodus_api_url: "https://reports.exodus-privacy.eu.org/api/trackers"
    api_timeout: 10
    
  behaviour_analysis:
    enabled: true  # Enabled by default in fast mode
    priority: 1000  # Lowest priority to run last
    deep_mode: false  # Fast mode by default, use --deep flag for deep mode
    features:
      device_model_access: true
      imei_access: true
      android_version_access: true
      phone_number_access: true
      clipboard_usage: true
      dynamic_receivers: true
      camera_access: true
      running_services_access: true
      installed_applications_access: true
      installed_packages_access: true
      reflection_usage: true
      
  library_detection:
    enabled: true
    priority: 25  # Run after string and manifest analysis but before tracker analysis
    
    # Stage 1: Heuristic Detection Configuration
    enable_heuristic: true
    confidence_threshold: 0.7  # Minimum confidence for heuristic detections
    
    # Stage 2: Similarity Detection Configuration (LibScan-inspired)
    enable_similarity: true
    similarity_threshold: 0.85  # Minimum similarity score for detections (LibScan default)
    class_similarity_threshold: 0.7  # Threshold for individual class matching
    
    # Custom library patterns (extends built-in patterns)
    custom_patterns: {}
    # Example custom pattern:
    # custom_patterns:
    #   "My Custom Library":
    #     packages: ["com.example.mylibrary"]
    #     category: "utility"
    #     classes: ["MyLibraryMain", "MyLibraryHelper"]
    #     permissions: ["android.permission.INTERNET"]
    
    # Stage 5: Apktool-based Detection Configuration (requires apktool extraction)
    apktool_detection:
      # Individual detection methods can be enabled/disabled
      enable_pattern_detection: false    # Pattern matching using IzzyOnDroid library definitions - disabled for faster testing
      enable_properties_detection: true  # Scan for .properties files with version info
      enable_buildconfig_detection: true # Extract info from BuildConfig.smali files
      
      # Automatic updates for library definitions
      auto_update_definitions: true      # Check for newer definitions on startup
      
      # Library definition URLs (IzzyOnDroid repository)
      libsmali_url: "https://gitlab.com/IzzyOnDroid/repo/-/raw/master/lib/libsmali.jsonl"
      libinfo_url: "https://gitlab.com/IzzyOnDroid/repo/-/raw/master/lib/libinfo.jsonl"
      
      # Local paths for library definition files
      libsmali_path: "./libsmali.jsonl"  # Local path for smali patterns
      libinfo_path: "./libinfo.jsonl"    # Local path for library info
      
      # Note: Set auto_update_definitions to false and customize paths above 
      # if you want to use your own library definition files
    
    # Version Analysis Configuration (NEW)  
    version_analysis:
      enabled: true                     # Enable version analysis and "years behind" calculation
      security_analysis_only: true     # Only run version analysis during security analysis (-s flag)
      api_timeout: 5                    # Timeout for API calls to version databases (seconds)
      cache_duration_hours: 24          # Cache duration for version information
      
      # Version sources (in order of preference)
      sources:
        maven_central: true             # Check Maven Central for Android/Java libraries
        npm_registry: true              # Check npm for JavaScript libraries
        pypi: true                      # Check PyPI for Python libraries (Kivy apps)
        custom_database: false          # Use custom version database (extend as needed)
      
      # Console output options
      console_output:
        enabled: true                   # Show enhanced version analysis in console
        show_recommendations: true      # Show update recommendations
        group_by_risk: true            # Group libraries by security risk level
        show_summary: true             # Show summary statistics
    
    # Analysis features
    features:
      package_analysis: true      # Analyze package names for library indicators
      class_analysis: true        # Analyze class names and hierarchies
      manifest_analysis: true     # Check manifest for library-specific elements
      method_analysis: true       # Analyze method signatures and opcodes
      call_chain_analysis: true   # Analyze method call relationships
      structural_analysis: true   # Compare class dependency structures

  native_analysis:
    enabled: true
    priority: 50  # Run after library_detection and string_analysis
    
    # Dependency requirements
    requires_temporal_analysis: true  # Only run when APK is unzipped
    
    # Architecture filtering (performance optimization)
    architectures:
      - "arm64-v8a"      # Primary 64-bit ARM (most common)
      - "armeabi-v7a"    # 32-bit ARM (sometimes available)
      # - "x86_64"       # 64-bit x86 (uncommon on mobile)
      # - "x86"          # 32-bit x86 (uncommon on mobile)
    
    # File filtering
    file_patterns:
      - "*.so"           # Native shared libraries
      # - "*.a"          # Static libraries (uncommon in APKs)
      
    # Analysis modules
    modules:
      string_extraction:
        enabled: true
        min_string_length: 4        # Minimum string length to extract
        max_string_length: 1024     # Maximum string length (prevent memory issues)
        encoding: "utf-8"           # Primary encoding to attempt
        fallback_encodings: ["latin1", "ascii"]  # Fallback encodings
      
      library_version_detection:
        enabled: true
        min_confidence: 0.6         # Minimum confidence for library detections
        max_libraries_per_binary: 10  # Limit detections per binary file
        strings_timeout: 30         # Timeout for strings command fallback (seconds)
        # Note: Module automatically falls back to strings command if radare2 is not available

# External Tools Configuration
tools:
  apkid:
    enabled: true
    timeout: 300
    options: []
    
  kavanoz:
    enabled: true
    timeout: 600
    output_dir: null  # If null, uses temp directory
    
  androguard:
    enabled: true
    logging_level: "WARNING"
    
  # Decompilation and Analysis Tools
  jadx:
    enabled: false
    path: "/Users/danielbaier/Downloads/jadx-1.5.2/bin/jadx"  # Set to JADX executable path, e.g., "/usr/local/bin/jadx"
    timeout: 900  # 15 minutes
    options: ["--no-debug-info", "--no-inline-anonymous", "--show-bad-code"]
    
  apktool:
    enabled: true
    path: "/opt/homebrew/Cellar/apktool/2.12.0/libexec/apktool_2.12.0.jar"  # Set to apktool JAR path, e.g., "/opt/apktool/apktool.jar"
    timeout: 600  # 10 minutes
    java_options: ["-Xmx2g"]  # Java heap options
    options: ["--no-debug-info"]
    
  # Native Binary Analysis Tools
  radare2:
    enabled: true
    path: null  # Set to radare2 binary path. Common paths: "/opt/homebrew/bin/r2", "/usr/local/bin/radare2", "/usr/bin/r2" (uses system PATH if null)
    timeout: 120  # 2 minutes per binary analysis
    options: ["-2"]  # Radare2 options: -2 for no stderr output
    # Common installation paths to try automatically:
    # macOS Homebrew: /opt/homebrew/bin/r2
    # Linux package managers: /usr/bin/r2, /usr/local/bin/radare2
    # Manual install: /usr/local/bin/r2
    fallback_paths:
      - "/opt/homebrew/bin/r2"      # macOS Homebrew (Apple Silicon)
      - "/usr/local/bin/radare2"    # macOS Homebrew (Intel)
      - "/usr/bin/r2"               # Linux package manager
      - "/usr/local/bin/r2"         # Manual installation

# Temporal Directory Configuration
temporal_analysis:
  enabled: true
  base_directory: "./temp_analysis"  # Base directory for temporal analysis
  cleanup_after_analysis: false  # Set to true to cleanup directories after analysis
  directory_structure:
    unzipped_folder: "unzipped"      # Folder name for unzipped APK contents
    jadx_folder: "jadxResults"       # Folder name for JADX decompiled results
    apktool_folder: "apktoolResults" # Folder name for apktool results
    logs_folder: "logs"              # Folder name for tool execution logs
  preserve_on_error: true  # Keep directories if analysis fails

# Security Assessment Configuration
security:
  # enable_owasp_assessment: false  # Commented out to allow CLI -s flag to work
  # Use -s flag to enable security analysis or set to true here to enable by default
  
  # CVE Vulnerability Scanning Configuration
  cve_scanning:
    enabled: true  # Enable CVE scanner
    
    # CVE Data Sources Configuration
    sources:
      osv:  # Open Source Vulnerabilities (Google)
        enabled: false
        api_key: null  # OSV doesn't require API key
      nvd:  # National Vulnerability Database (NIST)
        enabled: true  # Disabled for testing since API key not configured
        api_key: "YOUR_NVD_API_KEY"  # Optional, improves rate limits
      github:  # GitHub Advisory Database
        enabled: false
        api_key: "YOUR_GITHUB_TOKEN"  # Optional, improves rate limits
    
    # Scanning Performance Configuration
    max_workers: 1  # Sequential execution to avoid session conflicts and API issues
    timeout_seconds: 30  # Timeout per individual CVE API request
    overall_timeout_minutes: 10  # Total timeout for entire CVE scanning process
    min_confidence: 0.7  # Minimum library confidence for CVE scanning
    max_libraries_per_source: 30  # Maximum libraries scanned per source to avoid excessive API usage
    retry_attempts: 2  # Number of retry attempts for failed requests
    retry_delay_seconds: 5  # Base delay between retries (exponential backoff)
    
    # Library Type Filtering Configuration
    scan_native_only: true  # Only scan native libraries (.so files) - these have more CVEs than Java/Android libs
    include_java_libraries: false  # Also scan Java/Android libraries (may have fewer relevant CVEs)
    native_library_patterns:  # Patterns to identify native libraries
      - "*.so"  # Native shared objects
      - "*ffmpeg*"  # FFmpeg variants
      - "*openssl*"  # OpenSSL variants  
      - "*curl*"  # curl variants
      - "*sqlite*"  # SQLite variants
      - "*crypto*"  # Crypto libraries
      - "*ssl*"  # SSL libraries
      - "*zlib*"  # Compression libraries
      - "*png*"  # Image libraries
      - "*jpeg*"  # Image libraries
      - "*webp*"  # Image libraries
    
    # Caching Configuration
    cache_duration_hours: 24  # Cache CVE results for 24 hours
    cache_dir: null  # If null, uses ~/.dexray_insight/cve_cache
    
    # Rate Limiting Configuration (conservative defaults to avoid 429 errors)
    rate_limits:
      osv:
        requests_per_minute: 20  # Very conservative to avoid rate limiting during parallel scans
        requests_per_hour: 1200
        burst_limit: 3
        burst_window_seconds: 60
      nvd:
        requests_per_minute: 20  # Improved limit for better performance
        requests_per_hour: 1200
        burst_limit: 10
        burst_window_seconds: 30
      github:
        requests_per_minute: 30  # Conservative limit to avoid authentication issues
        requests_per_hour: 1800
        burst_limit: 5
        burst_window_seconds: 60
  
  assessments:
    injection:
      enabled: true
      sql_patterns: ["SELECT", "INSERT", "UPDATE", "DELETE", "DROP"]
      command_patterns: ["exec", "system", "runtime"]
    broken_authentication:
      enabled: true
      check_weak_crypto: true
      check_hardcoded_secrets: true
    sensitive_data:
      enabled: true
      pii_patterns: ["email", "phone", "ssn", "credit_card"]
      crypto_keys_check: true
      # Enhanced hardcoded key detection settings
      key_detection:
        enabled: true
        # Detection patterns to enable/disable
        patterns:
          pem_keys: true              # PEM formatted private keys and certificates
          ssh_keys: true              # SSH public/private keys
          jwt_tokens: true            # JWT tokens
          api_keys: true              # Various API keys (AWS, GitHub, Google, etc.)
          base64_keys: true           # Base64 encoded potential keys
          hex_keys: true              # Hexadecimal keys
          database_connections: true  # Database connection strings
          high_entropy_strings: true  # Generic high-entropy strings
        # Entropy thresholds for detection
        entropy_thresholds:
          min_base64_entropy: 4.0     # Minimum entropy for base64 strings
          min_hex_entropy: 3.5        # Minimum entropy for hex strings  
          min_generic_entropy: 5.0    # Minimum entropy for generic strings
        # String length filters
        length_filters:
          min_key_length: 16          # Minimum length for potential keys
          max_key_length: 512         # Maximum length to avoid very long strings
        # Context detection settings
        context_detection:
          enabled: true               # Enable context-aware detection
          strict_mode: false          # Require context for all detections
    broken_access_control:
      enabled: true
      check_exported_components: true
      check_permissions: true
    security_misconfiguration:
      enabled: true
      check_debug_flags: true
      check_network_security: true
    vulnerable_components:
      enabled: true
      check_known_libraries: true
    insufficient_logging:
      enabled: true
      check_logging_practices: true

# Output Configuration
output:
  format: "json"
  pretty_print: true
  include_timestamps: true
  output_directory: "./results"
  filename_template: "dexray_{apk_name}_{timestamp}.json"

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: null  # If null, logs to console only