# Pre-commit configuration for Dexray Insight
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^tests/fixtures/
      - id: end-of-file-fixer
        exclude: ^tests/fixtures/
      - id: check-yaml
        args: ['--unsafe']  # Allow custom YAML tags
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: requirements-txt-fixer
        files: requirements.*\.txt$

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=120]
        exclude: ^(tests/fixtures/|example_samples/)

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--line-length", "120"]
        exclude: ^(tests/fixtures/|example_samples/)

  # Python linting with ruff (faster alternative to flake8)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: [--fix]
        exclude: ^(tests/fixtures/|example_samples/)
      - id: ruff-format
        exclude: ^(tests/fixtures/|example_samples/)

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-r', 'src/', '-f', 'json', '-o', 'bandit-report.json']
        exclude: ^tests/
        pass_filenames: false

  # Check for known security vulnerabilities in dependencies
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        files: requirements.*\.txt$

  # Docstring formatting for Python
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ["--convention=google", "--add-ignore=D100,D101,D102,D103,D104,D105"]
        exclude: ^(tests/|examples/|docs/|setup.py)

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-PyYAML]
        exclude: ^(tests/|docs/|setup.py)
        args: [--ignore-missing-imports, --no-strict-optional]

  # Documentation checks
  - repo: https://github.com/myint/rstcheck
    rev: v6.2.0
    hooks:
      - id: rstcheck
        additional_dependencies: [sphinx]
        args: [--report-level=warning]
        files: ^docs/.*\.rst$

  # Jupyter notebook cleaning (disabled due to SSL issues on some systems)
  # - repo: https://github.com/nbQA-dev/nbQA
  #   rev: 1.7.1
  #   hooks:
  #     - id: nbqa-black
  #       additional_dependencies: [black]
  #     - id: nbqa-isort
  #       additional_dependencies: [isort]

  # Check for secrets/credentials (security)
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: ^(tests/fixtures/|.*\.lock$|.*\.log$)

  # YAML/JSON formatting (disabled due to SSL issues on some systems)
  # - repo: https://github.com/pre-commit/mirrors-prettier
  #   rev: v3.1.0
  #   hooks:
  #     - id: prettier
  #       types_or: [yaml, json, markdown]
  #       exclude: ^(tests/fixtures/|example_samples/|.*\.md$)

  # License header check
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        files: \.py$
        exclude: ^(tests/|docs/|setup.py|__init__.py)
        args:
          - --license-filepath
          - .license-header.txt
          - --use-current-year
          - --allow-past-years

# Configuration for specific tools
ci:
    autofix_commit_msg: |
        [pre-commit.ci] auto fixes from pre-commit hooks

        for more information, see https://pre-commit.ci
    autofix_prs: true
    autoupdate_branch: 'main'
    autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
    autoupdate_schedule: weekly
    skip: [bandit, python-safety-dependencies-check]  # Skip in CI for speed
    submodules: false