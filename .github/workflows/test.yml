name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk
        # Download and install apktool
        wget https://github.com/iBotPeaches/Apktool/releases/download/v2.12.0/apktool_2.12.0.jar -O /tmp/apktool.jar
        sudo mkdir -p /opt/apktool
        sudo mv /tmp/apktool.jar /opt/apktool/apktool_2.12.0.jar
    
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -e .[test]
    
    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --cov=src/dexray_insight --cov-report=xml -m unit
    
    - name: Run integration tests
      run: |
        if find tests/integration/ -name "test_*.py" -type f | grep -q .; then
          pytest tests/integration/ -v -m integration
        else
          echo "No integration tests found, skipping..."
        fi
    
    - name: Run regression tests
      run: |
        if pytest tests/ --collect-only -m regression | grep -qE "[0-9]+ tests? collected"; then
          pytest tests/ -v -m regression
        else
          echo "No regression tests found, skipping..."
        fi
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
    
  test-e2e:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk
        wget https://github.com/iBotPeaches/Apktool/releases/download/v2.12.0/apktool_2.12.0.jar -O /tmp/apktool.jar
        sudo mkdir -p /opt/apktool
        sudo mv /tmp/apktool.jar /opt/apktool/apktool_2.12.0.jar
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -e .[test]
    
    - name: Run end-to-end tests
      run: |
        if find tests/e2e/ -name "test_*.py" -type f | grep -q .; then
          pytest tests/e2e/ -v --timeout=300 -m e2e
        else
          echo "No end-to-end tests found, skipping..."
        fi
  
  quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -e .[dev]
    
    - name: Run linting
      continue-on-error: true
      run: |
        flake8 src/dexray_insight tests/ --max-line-length=100
    
    - name: Run type checking
      continue-on-error: true
      run: |
        mypy src/dexray_insight --ignore-missing-imports
    
    - name: Run security checks
      run: |
        # Add security scanning tools here
        echo "Security checks passed"